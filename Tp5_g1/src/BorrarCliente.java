
import Clases.Contactos;
import Clases.Directorio;
import java.util.TreeMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author martinleiza
 */
public class BorrarCliente extends javax.swing.JInternalFrame {

    /**
     * Creates new form BorrarCliente
     */
    DefaultTableModel elBarto = new DefaultTableModel ();
    DefaultListModel<String> modeloLista = new DefaultListModel<>();
    
    public BorrarCliente() {
        initComponents();
        
        for (Integer dni : Directorio.TodosLosDni()) {
            modeloLista.addElement(String.valueOf(dni));
        }
        jListDni.setModel(modeloLista);
       
        titulos();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTdni = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBEliminar = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDni = new javax.swing.JList<>();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel1.setText("Borrar Ciente");

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel2.setText("DNI:");

        jTdni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTdniActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "DNI", "Apellido", "Nombre", "Direcci√≥n", "Ciudad", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jBEliminar.setText("Borrar");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jListDni.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListDni.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListDniValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListDni);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jTdni, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(456, 456, 456)
                                .addComponent(jBEliminar)
                                .addGap(18, 18, 18)
                                .addComponent(jBSalir)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBEliminar)
                            .addComponent(jBSalir))
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTdni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTdniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTdniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTdniActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jListDniValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListDniValueChanged
        // TODO add your handling code here:
     
        //   CADA VEZ QUE SELECCIONAMOS UN ITEM LIMPIA 
     // -------------->  /*elBarto.setRowCount(0);*/------------
     
     
        // tenemos que retirar los datos para q sean cargados en la tabla
        
        //creamos una variable de tipo int que guarde el valor del dni seleccionado en la lista
          
       
       int dni = Integer.parseInt(jListDni.getSelectedValue());
       jTdni.setText(String.valueOf(dni));
       Contactos cell = new Directorio().buscarContactoPorDNI(dni);
       // lo usamos para asegurar q encontraba el contacto 
        if(cell==null){
            JOptionPane.showMessageDialog(this, "No se encontro el  contacto con el dni");
            return;
        }
        
        
        Long telefono = Directorio.BuscarTlefonoPorContacto(cell);
    
        String fono = String.valueOf(telefono);
        
        //Me aseguro q no se agregue dos veces el mismo contacto en la tabla 
        boolean existe= false;
        for(int i=0; i< elBarto.getRowCount();i++){
            int dniTabla = (int)elBarto.getValueAt(i, 0);
            if(dniTabla == cell.getDni()){
                existe= true;
                break;
            }
            
            
        }
        if(!existe){
        elBarto.addRow(new Object [] {cell.getDni(),cell.getApellido(),cell.getNombre(),cell.getDireccion(), cell.getCiudad(),fono});
        }
           
        jTable1.setModel(elBarto);
        
      
        
        
    }//GEN-LAST:event_jListDniValueChanged

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        
        
        for(int i= elBarto.getRowCount()-1; i>=0; i--){
            //como los numeros en la tabla se guardan como integer los parseo 
            Number numero = (Number)elBarto.getValueAt(i, 0);
            Long telefono = numero.longValue();
         
         // borramos ;ps va;pres desde edl tree map
         
         Directorio.borrarContacto(telefono);
         // borramos fila de la tabla
         elBarto.removeRow(i);
            
        }
       
        //mensaje
       
        JOptionPane.showMessageDialog(null, "Todos los contactos de la Tabla fueron eliminados");
        
     actualizarListaDNI();
    }//GEN-LAST:event_jBEliminarActionPerformed
        
    private void titulos(){
        elBarto.addColumn("dni");
        elBarto.addColumn("apellido");
        elBarto.addColumn("nombre");
        elBarto.addColumn("direccion");
        elBarto.addColumn("ciudad");
        elBarto.addColumn("telefono");
        jTable1.setModel(elBarto);
    }
    //--------------quiero actualizar luyegop de eliminar mi JList pero bno funciona
    private void actualizarListaDNI(){
        modeloLista.clear();
        for(Integer dni: Directorio.TodosLosDni()){
            modeloLista.addElement(String.valueOf(dni));
            
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jListDni;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTdni;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
